name: Denomantic Release

description: Semantic release for Deno project

inputs:
  script:
    description: path to cli.ts
    required: true
    default: https://deno.land/x/denomantic_release@0.10.3/cli.ts

  repository:
    description: target repository
    required: true
    default: ${{ github.repository }}

  token:
    description: GitHub access token authorized to run workflows
    required: true
    default: ${{ github.token }}

  draft:
    description: if drafting a release
    required: false
    type: boolean
    default: false

  dry-run:
    description: do not actually create a release
    required: false
    type: boolean
    default: false

  assets:
    description: paths for assets to be uploaded
    required: false
    type: string

  denopendabot:
    description: running mode of denopendabot ('action', 'app', or 'disabled')
    required: true
    default: action

runs:
  using: composite
  steps:
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.36.4 # @denopendabot denoland/deno

    - id: run
      run: >
        deno run -q --allow-env --allow-net --allow-write
        ${{ inputs.assets && '--allow-read' }}
        ${{ inputs.script }}
        ${{ inputs.repository }}
        ${{ inputs.token && format('--token {0}', inputs.token) }}
        ${{ inputs.draft && '--draft' }}
        ${{ inputs.dry-run && '--dry-run' }}
        ${{ inputs.assets && format('--assets {0}', inputs.assets) }}
      shell: bash

    - uses: hasundue/denopendabot@0.17.2 # @denopendabot hasundue/denopendabot
      if: ${{ steps.run.outputs.needs_update && inputs.denopendabot != 'disabled' }}
      with:
        mode: ${{ inputs.denopendabot }}
        release: ${{ steps.run.outputs.version }}
        auto-merge: any

outputs:
  version:
    description: version of the release to be created
    value: ${{ steps.run.outputs.version }}

  needs_update:
    description: true if version numbers should be updated before release
    value: ${{ steps.run.outputs.needs_update }}

  released:
    description: release_id if created
    value: ${{ steps.run.outputs.released }}
